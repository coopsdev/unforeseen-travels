@use '../../_css/common.scss' as *;

.referenceHero {
  position: relative;
  display: flex;
  flex-direction: column;
}

.title {
  margin: 0;
}

.bridge {
  position: absolute;
  left: 3px;
  width: 4px;
  background-color: rgba(221, 111, 15, 0.58);
  top: 80px; // Start just below the title
  height: 87% !important;
  border-radius: 2px;
  box-shadow:
    rgba(0, 0, 0, 0.3) -1px 1px 8px,  /* Softer, larger shadow */
    rgba(0, 0, 0, 0.15) 2px 2px 6px;   /* More defined, yet subtle closer shadow */
}

.referenceContainer {
  margin-bottom: 40px;
  display: flex;
  flex-direction: column;

  &.multiReference {
    margin-bottom: 15px !important;
  }
}

.referenceContent {
  position: relative;
  padding-left: 20px;
}

.content {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  overflow-x: visible;
  margin: 0 auto 50px;

  @include mid-break {
    width: 100%;
    gap: calc(var(--base) / 2);
  }
}

.title {
  margin: 0;
  text-shadow:
    rgba(0, 0, 0, 0.2) 1px 1px 1px,  /* Soft, subtle shadow for depth */
    rgba(0, 0, 0, 0.15) 2px 2px 2px;  /* Sharper, more defined shadow for crispness */

  @media (min-width: 1024px) {
    font-size: 30px;
  }

  @media (min-width: 1130px) {
    font-size: 36px;
  }

  @media (min-width: 1200px) {
    font-size: 40px;
  }
}

.infoBar {
  display: flex;
  justify-content: flex-start;
  align-items: center;
  margin-bottom: 15px;
}

.location {
  margin: 0 20px 0 0;
  text-shadow:
    rgba(0, 0, 0, 0.15) 1px 1px 1px,  /* Clean, sharp shadow for slight depth */
    rgba(0, 0, 0, 0.1) 2px 2px 1px;  /* Defined shadow to add subtle clarity */
}

.rating {
  position: relative;
  top: -3px;
}

.body {
  display: flex;
  flex-direction: row;  // Media and review side by side by default
  height: 300px;
  background: #146a8e;
  border-radius: 10px;
  overflow: hidden;
  box-shadow:
    rgba(0, 0, 0, 0.4) -1px 1px 12px,  /* Softer, larger shadow */
    rgba(0, 0, 0, 0.15) 2px 2px 6px;   /* More defined, yet subtle closer shadow */

  .review {
    flex-grow: 1; // Allow review to grow and shrink
    flex-shrink: 1; // Ensure review shrinks as media grows
    padding: 20px ;
    max-height: inherit;
    min-width: 400px; // Prevent the review from shrinking too much
    overflow-y: auto;
    display: block;
    color: white;
    text-shadow:
      rgba(0, 0, 0, 0.2) 1px 1px 1px,  /* Clean, sharp shadow for slight depth */
      rgba(0, 0, 0, 0.1) 2px 2px 1px;  /* Defined shadow to add subtle clarity */

    .reviewText {
    }
  }

  .media {
    flex-grow: 0; // Media should not grow initially
    flex-shrink: 1; // Allow media to shrink when necessary
    max-height: inherit; // Image respects height limit
    height: fit-content;
    display: block;
    position: relative;
    width: inherit;
    background: rgba(0, 0, 0, 0.25);
    min-width: fit-content;
    max-width: 50%;
    box-shadow:
      rgba(0, 0, 0, 0.2) -1px 1px 10px,  /* Subtle, larger shadow for smooth depth */
      rgba(0, 0, 0, 0.1) 1px 1px 4px;    /* Sharper, defined shadow for clear separation */

    img {
      position: inherit !important;
      object-fit: cover;
      width: auto;
      height: 300px !important;

      // If landscape, adjust the fit dynamically
      &.landscape {
      }

      &.portrait {
        width: auto;
        height: 400px !important;
      }
    }

    // Media query for small screens (below 750px)
    @media (max-width: 750px) {
      display: flex;
      justify-content: center;
      img {
        width: auto !important;
        height: fit-content !important;
        justify-content: center;

        // Flip landscape and portrait rules for mobile
        &.landscape {
          height: 100%;
        }
      }
    }
  }

  &.portraitBody {
    height: 400px;

    .media {
      height: auto;
      width: auto;

      .mediaWrapper {
        width: auto;
        min-height: 100%;

        img {
          height: 100% !important;
        }
      }
    }
  }

  @media (max-width: 750px) {
    flex-direction: column;  // Stack review and media vertically for smaller screens
    height: auto; // Allow the height to adjust for content

    .media {
      max-width: 100%;  // Image takes full width
      height: fit-content;     // Adjust height dynamically
      max-height: 80vh;
    }

    .review {
      max-height: inherit; // Adjust max height for scrolling
    }
  }
}

.caption {
  color: var(--theme-elevation-500);
}

.scrollDownArrow {
  position: absolute;
  bottom: 10px;
  left: 45%;
  transform: translateX(-50%);
  font-size: 42px;
  color: #f7f7f7;
  animation: bounce 1.5s infinite;
  cursor: pointer;
  z-index: 1;
  background: rgba(0, 0, 0, 0.5);
  border-radius: 50%;
  padding: 10px
}

@keyframes bounce {
  0%, 20%, 50%, 80%, 100% {
    transform: translateY(0);
  }
  40% {
    transform: translateY(-10px);
  }
  60% {
    transform: translateY(-5px);
  }
}

.review {
  position: relative;
  overflow-y: auto;
  max-height: inherit;  // Respect the parent container's max height
}
