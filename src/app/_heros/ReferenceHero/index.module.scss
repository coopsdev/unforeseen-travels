@use '../../_css/common.scss' as *;

.referenceHero {
  display: flex;
  flex-direction: column;
  gap: calc(var(--base) * 2);

  @include mid-break {
    gap: var(--base);
  }
}

.content {
  display: flex;
  flex-direction: column;
  width: 100%;
  align-items: flex-start;
  overflow-x: visible;
  margin-bottom: 30px;

  @include mid-break {
    width: 100%;
    gap: calc(var(--base) / 2);
  }
}

.title {
  margin: 0;

  @media (min-width: 1024px) {
    font-size: 30px;
  }

  @media (min-width: 1130px) {
    font-size: 36px;
  }

  @media (min-width: 1200px) {
    font-size: 40px;
  }
}

.infoBar {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 15px;
}

.location {
  margin: 0 20px 0 0;
}

.rating {
  position: relative;
  top: -3px;
}

.body {
  display: flex;
  flex-direction: row;  // Media and review side by side
  height: 300px;
  background: #146a8e;
  border-radius: 10px;
  overflow-y: hidden;

  .review {
    flex-grow: 1; // Allow review to grow and shrink
    flex-shrink: 1; // Ensure review shrinks as media grows
    padding-left: 15px;
    max-height: inherit;
    min-width: 200px; // Prevent the review from shrinking too much
    overflow-y: auto;
    display: block;
    color: white;
  }

  .media {
    flex-grow: 0; // Media should not grow initially
    flex-shrink: 1; // Allow media to shrink when necessary
    max-height: inherit; // Image respects height limit
    height: fit-content;
  }
}

.mediaWrapper {
  display: block;
  position: relative;
  width: 100%;
  background: rgba(0, 0, 0, 0.25);
  min-width: 187px;
  max-height: 100%;

  // Dynamically adjust based on image orientation
  img {
    position: inherit !important;
    object-fit: cover;
    width: auto;
    height: 300px !important; // Scale to height by default

    // If landscape, adjust the fit dynamically
    &.landscape {
      // object-fit: contain;
      width: 100%;
      min-width: 350px;
    }
  }
}

.caption {
  color: var(--theme-elevation-500);
}

.scrollDownArrow {
  position: absolute;
  bottom: 10px;
  left: 50%;
  transform: translateX(-50%);
  font-size: 42px;
  color: #f7f7f7;
  animation: bounce 1.5s infinite;
  cursor: pointer;
  z-index: 1;
  background: rgba(0, 0, 0, 0.5);
  border-radius: 50%;
  padding: 10px
}

@keyframes bounce {
  0%, 20%, 50%, 80%, 100% {
    transform: translateY(0);
  }
  40% {
    transform: translateY(-10px);
  }
  60% {
    transform: translateY(-5px);
  }
}

.review {
  position: relative;
  overflow-y: auto;
  max-height: inherit;  // Respect the parent container's max height
}
